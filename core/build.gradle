buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
  }

  dependencies {
    classpath "com.github.hurricup:gradle-grammar-kit-plugin:${ideaVersion}"
  }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.grammarkit'

import com.alecstrong.sqlite.psi.tasks.BnfExtenderTask
import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

sourceSets {
  main.java.srcDir "gen"
}

dependencies {
  compileOnly dep.intellijCore

  implementation dep.kotlinStdLib

  testImplementation dep.intellijCore
  testImplementation dep.junit
  testImplementation dep.truth
}

task generateSqliteLexer(type: GenerateLexer) {
  source 'src/main/grammars/SqliteLexer.flex'
  targetDir 'gen/com/alecstrong/sqlite/psi/core/lexer/'
  targetClass 'SqliteLexer'
  purgeOldFiles = true
}

task generateSqliteExtendableGrammar(type: BnfExtenderTask) {
  source "src"
  include "main/grammars/sqlite.bnf"
  outputDirectory = file("gen")
  outputPackage = "com.alecstrong.sqlite.psi.core"
}

task generateSqliteParser(type: GenerateParser) {
  source "gen/com/alecstrong/sqlite/psi/core/grammars/sqlite.bnf"
  targetRoot = 'gen/'
  pathToParser '/com/alecstrong/sqlite/psi/core/parser/SqliteParser.java'
  pathToPsiRoot '/com/alecstrong/sqlite/psi/core/psi'
  purgeOldFiles = true
}

// TODO (AlecStrong): generateSqliteParser isn't properly running when sqlite.bnf is edited.

generateSqliteParser.dependsOn generateSqliteExtendableGrammar
compileKotlin.dependsOn generateSqliteLexer, generateSqliteParser

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"
